# https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-licensing.html
# Doesn't work lol
---
apiVersion: v1
kind: Secret
metadata:
  name: eck-trial-license
  namespace: elastic-system
  labels:
    license.k8s.elastic.co/type: enterprise_trial
  annotations:
    elastic.co/eula: accepted
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
spec:
  version: 8.11.1
  nodeSets:
  - name: default
    count: 1
    config:
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms256m -Xmx256m
          resources:
            requests:
              memory: 10Mi
              cpu: 0.1
        volumes:
        - name: elasticsearch-data
          emptyDir: {}
    # volumeClaimTemplates:
    # https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-volume-claim-templates.html
    # Maybe volumes would work with Rook
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
spec:
  version: 8.11.1
  count: 1
  elasticsearchRef:
    name: elasticsearch
  podTemplate:
    spec:
      containers:
      - name: kibana
        env:
          - name: NODE_OPTIONS
            value: "--max-old-space-size=2048"
        resources:
          requests:
            memory: 10Mi
            cpu: 0.1
  elasticsearchRef:
    name: elasticsearch
  config:
    xpack.fleet.agents.elasticsearch.hosts: ["https://elasticsearch-es-http.default.svc:9200"]
    xpack.fleet.agents.fleet_server.hosts: ["https://fleet-server-agent-http.default.svc:8220"]
    xpack.fleet.packages:
      - name: system
        version: latest
      - name: elastic_agent
        version: latest
      - name: fleet_server
        version: latest
    xpack.fleet.agentPolicies:
      - name: Fleet Server on ECK policy
        id: eck-fleet-server
        is_default_fleet_server: true
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        package_policies:
        - name: fleet_server-1
          id: fleet_server-1
          package:
            name: fleet_server
      - name: Elastic Agent on ECK policy
        id: eck-agent
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        is_default: true
        package_policies:
          - name: system-1
            id: system-1
            package:
              name: system
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  config:
   server.publicBaseUrl: "https://mon1.rudenspavasaris.id.lv"
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kibana
spec:
  entryPoints:
    - https
  routes:
  - match: Host(`mon1.rudenspavasaris.id.lv`)
    kind: Rule
    services:
    - name: kibana-kb-http
      port: 5601
  tls:
    certResolver: default
# Doesn't work, due to Elastisearch working on https and having self-signed cert internally.
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: elasticsearch
spec:
  insecureSkipVerify: true
  entryPoints:
    - https
  routes:
  - match: Host(`mon2.rudenspavasaris.id.lv`)
    kind: Rule
    services:
    - name: elasticsearch-es-http
      port: 9200
  tls:
    certResolver: default
