# https://www.gooksu.com/2021/09/fleet-server-with-elasticsearch-in-docker-container/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet-server
  namespace: elastic
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: fleet-server
  template:
    metadata:
      labels:
        name: fleet-server
    spec:
      serviceAccountName: fleet-server
      containers:
        - name: fleet-server
          image: docker.elastic.co/beats/elastic-agent:8.11.1
          securityContext:
            runAsUser: 0
          env:
            - name: FLEET_SERVER_ENABLE
              value: "true"
            - name: FLEET_URL
              value: "https://mon3.rudenspavasaris.id.lv:443"
            - name: FLEET_SERVER_ELASTICSEARCH_HOST
              value: "https://mon2.rudenspavasaris.id.lv:443"
            - name: FLEET_SERVER_SERVICE_TOKEN
              value: "TOKEN_HERE" # TODO Put in secret or something
            - name: FLEET_SERVER_POLICY_ID
              value: "fleet-server-policy"
            - name: FLEET_SERVER_PORT
              value: "8220"
            - name: FLEET_SERVER_CERT
              value: "/certs/mon3.rudenspavasaris.id.lv.cert"
            - name: FLEET_SERVER_CERT_KEY
              value: "/certs/mon3.rudenspavasaris.id.lv.key"
          volumeMounts:
          - name: elasticsearch-ca
            mountPath: /elasticsearch-ca.pem
            readOnly: true
            subPath: elasticsearch-ca.pem
          - name: certificates
            mountPath: /certs
            readOnly: true
      volumes:
        - name: elasticsearch-ca
          secret:
            secretName: elasticsearch-ca
        - name: certificates
          hostPath:
            path: /certs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fleet-server
  namespace: elastic
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fleet-server
  namespace: elastic
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fleet-server
  namespace: elastic
subjects:
- kind: ServiceAccount
  name: fleet-server
  namespace: elastic
roleRef:
  kind: ClusterRole
  name: fleet-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: fleet-server
  namespace: elastic
  labels:
    name: fleet-server
spec:
  ports:
    - name: http
      port: 8220
      targetPort: 8220
  selector:
    name: fleet-server
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: fleet-server
  namespace: elastic
spec:
  entryPoints:
    - https
  routes:
  - match: Host(`mon3.rudenspavasaris.id.lv`)
    kind: Rule
    services:
    - name: fleet-server
      port: 8220
      scheme: https
  tls:
    certResolver: default
