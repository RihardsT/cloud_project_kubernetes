---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: elastic
  labels:
    k8s-app: haproxy
data:
  haproxy.cfg: |-
    global
    log 127.0.0.1 local0 debug
    defaults
      mode http                                # enable http mode which gives of layer 7 filtering
      timeout connect 5000ms                   # max time to wait for a connection attempt to a server to succeed
      timeout client 50000ms                   # max inactivity time on the client side
      timeout server 50000ms                   # max inactivity time on the server side
      log global
      option tcplog
      option dontlognull

    backend kibana
      server kibana kibana:5601
    backend elasticsearch
      timeout queue 30s
      server elasticsearch elasticsearch:9200 check maxconn 30

    frontend app
      bind *:80
      default_backend elasticsearch
      # stick-table  type ip  size 100k  expire 1m  store http_req_rate(40s)
      # http-request track-sc0 src
      # http-request deny deny_status 429 if { sc_http_req_rate(0) gt 15 }

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: haproxy
  labels:
    app: haproxy
  namespace: elastic
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      containers:
      - name: haproxy
        image: haproxy:2.0.5-alpine
        volumeMounts:
        - name: config
          mountPath: "/usr/local/etc/haproxy/haproxy.cfg"
          subPath: "haproxy.cfg"
        ports:
        - name: http
          containerPort: 80
          hostPort: 3045
          protocol: TCP
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: haproxy-config
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/hostname: "htz1"
