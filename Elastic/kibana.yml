# https://www.elastic.co/guide/en/kibana/current/docker.html
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
  namespace: elastic
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.3.2
        env:
          - name: SERVER_NAME
            value: mon.rudenspavasaris.id.lv
        volumeMounts:
        - name: config
          mountPath: /usr/share/kibana/config/kibana.yml
          readOnly: true
          subPath: kibana.yml
      volumes:
      - name: config
        configMap:
          defaultMode: 0666
          name: kibana-config
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/hostname: "htz1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: elastic
data:
  kibana.yml: |-
    server.name: kibana
    server.host: "0"
    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    xpack.monitoring.ui.container.elasticsearch.enabled: true
    xpack.security.enabled: true
    elasticsearch.username: "elastic"
    elasticsearch.password: "changeme"
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elastic
  labels:
    name: kibana
spec:
  ports:
    - name: http
      port: 5601
      targetPort: 5601
  selector:
    name: kibana
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana-mon1
  namespace: elastic
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: mon1.rudenspavasaris.id.lv
    http:
      paths:
      - path: /
        backend:
          serviceName: kibana
          servicePort: http
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kibana
  namespace: elastic
spec:
  entryPoints:
    - https
  routes:
  - match: Host(`mon1.rudenspavasaris.id.lv`)
    kind: Rule
    services:
    - name: kibana
      port: 5601
  tls:
    certResolver: default
