# https://www.elastic.co/guide/en/kibana/current/docker.html
# https://mon1.rudenspavasaris.id.lv/status
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: elastic
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: kibana
  template:
    metadata:
      labels:
        name: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.0.0
        env:
          - name: SERVER_NAME
            value: mon.rudenspavasaris.id.lv
          - name: NODE_OPTIONS
            value: "--max-old-space-size=512"
        volumeMounts:
        - name: config
          mountPath: /usr/share/kibana/config/kibana.yml
          readOnly: true
          subPath: kibana.yml
        - name: elasticsearch-ca
          mountPath: /usr/share/kibana/config/elasticsearch-ca.pem
          readOnly: true
          subPath: elasticsearch-ca.pem
      volumes:
      - name: config
        configMap:
          defaultMode: 0666
          name: kibana-config
      - name: elasticsearch-ca
        secret:
          secretName: elasticsearch-ca
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/hostname: "htz1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: elastic
data:
  kibana.yml: |-
    server.name: kibana
    server.host: 0.0.0.0
    server.publicBaseUrl: "https://mon1.rudenspavasaris.id.lv"
    elasticsearch.hosts: [ "https://elasticsearch:9200" ]
    monitoring.ui.container.elasticsearch.enabled: true
    # elasticsearch.username: "kibana_system"
    # elasticsearch.password: "changeme"
    elasticsearch.serviceAccountToken: "AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYV90b2tlbjppNFBVSllFcFFfMlhmVWw1ckN5amRB"
    elasticsearch.ssl.certificateAuthorities: [ "config/elasticsearch-ca.pem" ]
    xpack.encryptedSavedObjects.encryptionKey: "pwpHw89wqzSAXBtMGMKJy4RLfwq3IVbsbTQDlBBdvkW8uvkIQaDnhA7UKFVTJDZ"
    # xpack.security.encryptionKey:
    # xpack.reporting.encryptionKey:
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elastic
  labels:
    name: kibana
spec:
  ports:
    - name: http
      port: 5601
      targetPort: 5601
  selector:
    name: kibana
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kibana
  namespace: elastic
spec:
  entryPoints:
    - https
  routes:
  - match: Host(`mon1.rudenspavasaris.id.lv`)
    kind: Rule
    services:
    - name: kibana
      port: 5601
  tls:
    certResolver: default
