---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: logstash
  namespace: elastic
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: logstash
    spec:
      containers:
      - name: logstash
        image: logstash:7.2.0
        env:
        - name: LS_JAVA_OPTS
          value: -Xmx256m -Xms256m
        args: [
          "--config.reload.automatic"
        ]
        volumeMounts:
        - mountPath: /usr/share/logstash/pipeline
          name: config
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: logstash-config
          items:
          - key: logstash.conf
            path: logstash.conf
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: elastic
  labels:
    name: logstash
spec:
  ports:
    - name: beats
      port: 5000
      targetPort: 5000
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    name: logstash
---
apiVersion: v1
kind: Service
metadata:
  name: logstash-tcp
  namespace: elastic
  labels:
    name: logstash
spec:
  type: NodePort
  ports:
    - name: tcp
      port: 8088
      nodePort: 30088
    - name: syslog
      port: 8888
      nodePort: 30888
  selector:
    name: logstash
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: logstash-mon2
  namespace: elastic
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: mon2.rudenspavasaris.id.lv
    http:
      paths:
      - path: /
        backend:
          serviceName: logstash
          servicePort: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: elastic
data:
  logstash.conf: |-
    input {
      beats {
        port => 5000
      }
      http {
        codec => line
        host => "0.0.0.0"
        port => "8080"
        tags => ["input-http"]
      }
      tcp {
        codec => line
        host => "0.0.0.0"
        port => "8088"
        tags => ["input-http"]
      }
      syslog {
        codec => line
        host => "0.0.0.0"
        port => "8888"
        tags => ["input-http"]
      }
    }

    output {
      if "input-http" in [tags] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "http-%{+YYYY.MM.dd}"
            pipeline => "filebeat-7.2.0-haproxy-log-pipeline"
        }
        # For debug - check what medata is in data
        # stdout {
        #   codec  => rubydebug {
        #     metadata => true
        #   }
        # }
      } else {
          elasticsearch {
            hosts => "elasticsearch:9200"
            index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
          }
      }
    }
