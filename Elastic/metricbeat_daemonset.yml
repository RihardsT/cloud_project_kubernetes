### After setup run this in metricbeat container:
# kubectl exec -ti -n elastic metricbeat-TAB bash
# curl -u elastic:changeme -X DELETE "kibana:5601/api/saved_objects/index-pattern/metricbeat-*" -H 'kbn-xsrf: true'
# curl -u elastic:changeme -X POST "kibana:5601/api/saved_objects/index-pattern/test-*" -H 'kbn-xsrf: true' -H 'Content-Type: application/json' -d'
# {"attributes": {
#   "title": "test-*"
# }}'

### All of this should be run in kube-system namespace instead of elastic
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-config
  namespace: elastic
  labels:
    k8s-app: metricbeat
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml

    # To enable hints based autodiscover uncomment this:
    # metricbeat.autodiscover:
    #  providers:
    #    - type: kubernetes
    #      host: ${NODE_NAME}
    #      hints.enabled: true

    processors:
      - add_cloud_metadata:

    # setup.template.name: 'test-metricbeat'
    # setup.template.pattern: 'test-metricbeat-*'
    setup.ilm.enabled: true
    # setup.ilm.overwrite: false
    # setup.ilm.check_exists: false
    # setup.ilm.rollover_alias: "test-metricbeat-7.9.2"
    # -${agent.version} -{agent.version} -%{[agent.version]}
    # setup.ilm.policy_name: "test"
    # setup.ilm.pattern: "{now/d}-000001"
    # setup.kibana.host: 'kibana:5601'
    # setup.dashboards.index: "test-*"
    # setup.kibana.space.id: "testspace"

    output.elasticsearch:
      hosts: ['https://elasticsearch:9200']
      username: elastic
      password: changeme
      ssl.enabled: true
      ssl.certificate_authorities: [ "/usr/share/metricbeat/elasticsearch-ca.pem" ]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  namespace: elastic
  labels:
    k8s-app: metricbeat
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        - core
        - diskio
        - socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory

    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
  # kubernetes.yml: |-
  #   - module: kubernetes
  #     metricsets:
  #       - node
  #       - system
  #       - pod
  #       - container
  #       - volume
  #     period: 10s
  #     host: ${NODE_NAME}
  #     hosts: ["localhost:10255"]
  #     # If using Red Hat OpenShift remove the previous hosts entry and
  #     # uncomment these settings:
  #     #hosts: ["https://${HOSTNAME}:10250"]
  #     #bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #     #ssl.certificate_authorities:
  #       #- /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
  elasticsearch-xpack.yml: |-
    - module: elasticsearch
      metricsets:
        - ccr
        - cluster_stats
        - index
        - index_recovery
        - index_summary
        - ml_job
        - node_stats
        - shard
        - enrich
      period: 10s
      hosts: ['https://elasticsearch:9200']
      username: elastic
      password: changeme
      ssl.enabled: true
      ssl.certificate_authorities: [ "/usr/share/metricbeat/elasticsearch-ca.pem" ]
      xpack.enabled: true
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: elastic
  labels:
    k8s-app: metricbeat
spec:
  selector:
    matchLabels:
      k8s-app: metricbeat
  template:
    metadata:
      labels:
        k8s-app: metricbeat
    spec:
      serviceAccountName: metricbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:7.15.1
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-system.hostfs=/hostfs",
        ]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
        - name: elasticsearch-ca
          mountPath: /usr/share/metricbeat/elasticsearch-ca.pem
          readOnly: true
          subPath: elasticsearch-ca.pem
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: config
        configMap:
          defaultMode: 0600
          name: metricbeat-daemonset-config
      - name: modules
        configMap:
          defaultMode: 0600
          name: metricbeat-daemonset-modules
      - name: data
        hostPath:
          path: /data/metricbeat-data
          type: DirectoryOrCreate
      - name: elasticsearch-ca
        secret:
          secretName: elasticsearch-ca
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
subjects:
- kind: ServiceAccount
  name: metricbeat
  namespace: elastic
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metricbeat
  labels:
    k8s-app: metricbeat
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: elastic
  labels:
    k8s-app: metricbeat
---
